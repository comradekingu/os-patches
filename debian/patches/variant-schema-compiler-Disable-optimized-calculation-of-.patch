From: Simon McVittie <smcv@debian.org>
Date: Mon, 30 Mar 2020 09:34:45 +0100
Subject: variant-schema-compiler: Disable optimized calculation of offset
 size

This doesn't seem to give the expected answers on ppc64el, which makes
me worry that it might be relying on undefined or implementation-defined
behaviour. Disable it everywhere until we work out what is going on.

Signed-off-by: Simon McVittie <smcv@debian.org>
---
 variant-schema-compiler/variant-schema-compiler | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)

diff --git a/variant-schema-compiler/variant-schema-compiler b/variant-schema-compiler/variant-schema-compiler
index fe2fb24..cb9fd6a 100755
--- a/variant-schema-compiler/variant-schema-compiler
+++ b/variant-schema-compiler/variant-schema-compiler
@@ -118,7 +118,7 @@ typedef struct {{
 G_GNUC_CONST static inline guint
 {prefix_}ref_get_offset_size (gsize size)
 {{
-#if defined(__GNUC__) && (__GNUC__ >= 4) && defined(__OPTIMIZE__) && defined(__LP64__)
+#if 0
   /* Instead of using a lookup table we use nibbles in a lookup word */
   guint32 v = (guint32)0x88884421;
   return (v >> (((__builtin_clzl(size) ^ 63) / 8) * 4)) & 0xf;
